{
    "contents" : "#' Developing a script that enables a tool to run the universal kriging with square root of distance as the covariate\n#'\n#' This script function builds an interpolated result with the consideration of the covariate, particularly sqrt(dist)\n#' and provide a kriged plot upon being run with the corresponding ArcGIS script tool.\n#'\n#' @param input_feature -  Input point feature containing fields of the dependant variable and all explanatory variables.\n#' @param predict_location -  Input point feature representing locations where you would like to predict the probable values for the presence of dependant variable. These point feature must have certain explanatory variables stored as fields.\n#' @param dep_variable - Field from the input feature containing the sampled attributes. A particular value gives the strength of the field element at that point.\n#' @param log_var - Taking logarithmic values for the dependent variable.\n#' @param covariate_var - Field from the input feature containing independent or explanatory variables that would act as a variable to covariate for the interpolation.\n#' @param vgm_mod - Input for the vgm expression to fit the variogram (default : vgm(1,\"Exp\",300,1))\n#' @return output_feature1 -Output krige shapefile that contains the predictions of the values of unsampled locations from the Prediction_location dataset.\n#' @return output_feature2 - Output variance provides how far the values are deviated from the other and the mean and exports the output as a pdf file.\n#' @author Shankarlingam Sundaresan\n#' @details This script function interpolates the values that are modeled by a Gaussian process governed by prior covariance,\n#' as opposed to a piecewiseâ€“polynomial spline chosen to optimize smoothness of the fitted values.\n#' it is similar to ordinary kriging, yet it includes a polynomial trend model,\n#' assumes covariates for interpolation (kriging under non-stationary conditions, in the presence of drift).\n#' @export\n#'\n\n\n# Universial kriging of the meuse zinc data, using sqrt(dist) as covariate.\n# Initializing binding tool function\ntool_exec <- function(in_params, out_params)\n{\n  # loading packages\n\n\n\n  if (!requireNamespace(\"sp\", quietly = T))\n    install.packages(\"sp\")\n  if (!requireNamespace(\"gstat\",quietly = T))\n    install.packages(\"gstat\")\n  if (!requireNamespace(\"raster\",quietly = T))\n    install.packages(\"raster\")\n\n\n  require(sp)\n  require(gstat)\n  require(raster)\n\n  message(\"initializing\")\n  # defining variables\n  input_feature = in_params[[1]]\n  predict_location = in_params[[2]]\n  dep_variable = in_params[[3]]\n  covariate_var = in_params[[5]]\n  log_var = in_params[[4]]\n  vgm_mod = in_params[[6]]\n\n  output_feature1 = out_params[[1]]\n  output_feature2 = out_params[[2]]\n\n  #exporting datasets\n  d = arc.open(input_feature)\n  dat = arc.select(d,names(d@fields))\n  dat.2 = arc.data2sp(dat)\n\n  message(\"Creating model formula\")\n  if (log_var == FALSE)\n  {\n    model_kr = paste(dep_variable, \"~sqrt(\",covariate_var,\")\")\n\n  }\n  else\n  {\n    model_kr = paste(paste (\"log(\",dep_variable,\")\"),paste(\"~sqrt(\",covariate_var,\")\"))\n  }\n\n  model_kr.f = as.formula(model_kr)\n\n  message(paste0(\"formula =\",model_kr ))\n  message(\"Input vgm_model = \",vgm_mod)\n\n  message(\"creating variogram...\")\n  out_varianc = variogram(model_kr.f,dat.2)\n  vario.fit = fit.variogram(out_varianc,eval(parse(text= vgm_mod)))\n\n  print(vario.fit)\n\n\n  message(\"Predicting...\")\n  d.loc <- arc.open(predict_location)\n  data.loc = arc.select(d.loc, names(d.loc@fields))\n  data.loc.1 = arc.data2sp(data.loc)\n  gridded(data.loc.1)=T\n\n  #### Write Output ####\n\n\n  message(\"....kriging now....\")\n  out_krig = krige(model_kr.f,dat.2, data.loc.1, vario.fit)\n  message(class(out_krig))\n  gridded(out_krig)=T\n  out_krig1 = out_krig[1]\n\n  gridded(out_krig)=F\n  out_krig2 = out_krig[2]\n\n  message(\"...write output...\")\n  arc.write(output_feature1,out_krig1, shape_info = d@shapeinfo)\n\n  if (!is.null(output_feature2))\n  {\n    pdf(output_feature2)\n    print(plot(out_varianc,vario.fit,main = \"Variogram with fitted Model\",cex.main = 1.25))\n    gridded(out_krig)=TRUE\n    print(spplot(out_krig))\n    gridded(out_krig1)=T\n    gridded(out_krig2)=T\n    KrigRaster = raster(out_krig1)\n    VarRaster = raster(out_krig2)\n    plot(KrigRaster,main = \"Interpolation Raster Plot\",cex.main = 1.5)\n    plot(VarRaster,main = \"Variance Raster Plot\", cex.main =  1.5)\n    dev.off()\n  }\n  message(\"...done...almost...\")\n  return(out_params)\n}\n",
    "created" : 1457716490980.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2795930072",
    "id" : "E1B2A37F",
    "lastKnownWriteTime" : 1457961261,
    "path" : "D:/Back_up_shankar/R-programng/San-package/San-package/Arc.krige/R/Universal_krige_covar_sqrt_dist.R",
    "project_path" : "R/Universal_krige_covar_sqrt_dist.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_source"
}