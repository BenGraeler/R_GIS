{
    "contents" : "#' Developing a script that enables a tool to run the ordinary and universal kriging, in case with square root of distance as the covariate\n#'\n#' This script function builds an interpolated result with the consideration of the covariate in case if the covariate variable is given, particularly sqrt(dist)\n#' and provide a kriged plot upon being run with the corresponding ArcGIS script tool.\n#'\n#' @param in_params - input parameters\n#'\n#' @note The in_params parameter includes a list of 6 arguments.\n#'\n#' \\strong{input_feature} -  Input point feature containing fields of the dependant variable and all explanatory variables.\n#'\n#' \\strong{predict_location} -  Input point feature representing locations where you would like to predict the probable values for the presence of dependant variable. These point feature must have certain explanatory variables stored as fields.\n#'\n#' \\strong{dep_variable} - Field from the input feature containing the sampled attributes. A particular value gives the strength of the field element at that point.\n#'\n#' \\strong{log_var} - Taking logarithmic values for the dependent variable.\n#'\n#' \\strong{covariate_var} - Field from the input feature containing independent or explanatory variables that would act as a variable to covariate for the interpolation.\n#'\n#' \\strong{vgm_mod} - \\code{\\link[gstat]{fit.variogram}}Input for the vgm expression to fit the variogram (\\emph{default : vgm(1,\"Exp\",300,1) , which is meant for the \\bold{universal kriging}})\n\n#' @param out_params - output parameters\n#'\n#' @note The out_params parameter includes the return values of \\emph{output_feature1} and \\emph{output_feature2}\n#' @import gstat\n#' @import arcgisbinding\n#' @import sp\n#' @import raster\n#' @return output_feature1 - \\code{\\link[gstat]{krige}} Output krige shapefile that contains the predictions of the values of unsampled locations from the Prediction_location dataset.\n#' @return output_feature2 - \\code{\\link[gstat]{variogram}} Output variance provides how far the values are deviated from the other and the mean and exports the output as a pdf file.\n#' @author Edzer Pebesma, Shankarlingam Sundaresan\n#' @details This script function interpolates the values that are modeled by a Gaussian process governed by prior covariance, as opposed to a piecewise polynomial spline chosen to optimize smoothness of the fitted values.it is similar to ordinary kriging, yet it includes a polynomial trend model,\n#' assumes covariates for interpolation (kriging under non-stationary conditions, in the presence of drift).\n#' @export\n#' @seealso \\code{\\link{gstat}} , \\code{\\link{arcgisbinding}}\n#'\n# Ordinary kriging of the meuse zinc data with constant ~1\n# Universial kriging of the meuse zinc data, using sqrt(dist) as covariate.\n\n# Initializing binding tool function\ntool_exec <- function(in_params, out_params)\n{\n  # loading packages\n  arc.open = NULL\n  arc.select = NULL\n  variogram = NULL\n  fit.variogram = NULL\n  `gridded<-` = NULL\n  krige = NULL\n  arc.write = NULL\n  spplot = NULL\n  raster = NULL\n  arc.data2sp = NULL\n  rm(list=ls())\n\n  if (!requireNamespace(\"sp\", quietly = T))\n    install.packages(\"sp\")\n  if (!requireNamespace(\"gstat\",quietly = T))\n    install.packages(\"gstat\")\n  if (!requireNamespace(\"raster\",quietly = T))\n    install.packages(\"raster\")\n\n  requireNamespace(gstat)\n  requireNamespace(raster)\n\n  message(\"initializing\")\n  # defining variables\n  input_feature = in_params[[1]]\n  predict_location = in_params[[2]]\n  dep_variable = in_params[[3]]\n  log_var = in_params[[4]]\n  covariate_var = in_params[[5]]\n  vgm_mod = in_params[[6]]\n\n  output_feature1 = out_params[[1]]\n  output_feature2 = out_params[[2]]\n\n  #exporting datasets\n  d = arc.open(input_feature)\n  dat = arc.select(d,names(d@fields))\n  dat.2 = arc.data2sp(dat)\n\n  message(\"Creating model formula\")\n  if (!is.null(covariate_var))\n  {\n    if (log_var == FALSE)\n    {\n      model_kr = paste(dep_variable, \"~sqrt(\",covariate_var,\")\")\n\n    }\n    else\n    {\n      model_kr = paste(paste (\"log(\",dep_variable,\")\"),paste(\"~sqrt(\",covariate_var,\")\"))\n    }\n    message(paste0(\"formula =\",model_kr ))\n  }\n  else\n  {\n    if (log_var == FALSE)\n    {\n      model_kr = paste(dep_variable, \"~1\")\n      message(\"formula =\",model_kr)\n    }\n    else\n    {\n      model_kr = paste(paste (\"log(\",dep_variable,\")\"),paste(\"~1\"))\n      message(\"formula = log(\",dep_variable,\")~1\")\n    }\n  }\n\n  model_kr.f = as.formula(model_kr)\n\n  message(\"Input vgm_model = \",vgm_mod)\n\n  message(\"creating variogram...\")\n  out_varianc = variogram(model_kr.f,dat.2)\n  vario.fit = fit.variogram(out_varianc,eval(parse(text= vgm_mod)))\n\n  print(vario.fit)\n\n  message(\"Predicting...\")\n  d.loc <- arc.open(predict_location)\n  data.loc = arc.select(d.loc, names(d.loc@fields))\n  data.loc.1 = arc.data2sp(data.loc)\n  gridded(data.loc.1)=T\n\n  #### Write Output ####\n\n\n  message(\"....kriging now....\")\n  out_krig = krige(model_kr.f,dat.2, data.loc.1, vario.fit)\n  message(class(out_krig))\n  gridded(out_krig)=T\n  out_krig1 = out_krig[1]\n\n  gridded(out_krig)=F\n  out_krig2 = out_krig[2]\n\n  message(\"...write output...\")\n  arc.write(output_feature1,out_krig1, shape_info = d@shapeinfo)\n\n  if (!is.null(output_feature2))\n  {\n    pdf(output_feature2)\n    print(plot(out_varianc,vario.fit,main = \"Variogram with fitted Model\",cex.main = 1.25))\n    gridded(out_krig)=TRUE\n    print(spplot(out_krig))\n    gridded(out_krig1)=T\n    gridded(out_krig2)=T\n    KrigRaster = raster(out_krig1)\n    VarRaster = raster(out_krig2)\n    plot(KrigRaster,main = \"Interpolation Raster Plot\",cex.main = 1.5)\n    plot(VarRaster,main = \"Variance Raster Plot\", cex.main =  1.5)\n    dev.off()\n  }\n  message(\"...done...almost...\")\n  return(out_params)\n}\n",
    "created" : 1458831818056.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2307424333",
    "id" : "8A2D14",
    "lastKnownWriteTime" : 1459342712,
    "path" : "C:/Users/Shankar/Desktop/SEM-2/Githb/R_GIS/Arc.krige/R/ComKrige.R",
    "project_path" : "R/ComKrige.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}